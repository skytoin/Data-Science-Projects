
The goal of this project is to build a recommendation system to predict customer satisfaction with 
specific purchase. The data for training and submission is from Amazon. The data contains
user ids, product ids, product category, cost, number of stars, rank in Amazon system, the year and month
of purchase, number of reviews, the weight of the product, indicatation if purchase was verified or not, the
brand of the product, and the target variable. If buyer is satisfied with specific purchase then the value 
of target variable is 1 and if buyer isn't satisfied the value is 0.
 
The given data had some features with missed values. Missed values wered filled in if feature had low percentage
of missed values. Features like link to images were dropped, because they had too much of missed values.

Data analysis has shown that there is no correlation between numerical features and the target variable.
The highest correlation was found between the number of stars and the rank. It really makes sense, because 
Amazon ranks low popular products and search quearies place these products higher on the page. There is a 
slight correlation between the number of stars and the number of reviews. Most of the products are inexpensive
in the given data. Majority of the products have price in the range from $10 to $20. The weight is low too. 
This data has noticable correlation between the number of reviews and how often specific product was purchased. 
Similar correlation is between the rank and the number of transactions for specific product.

The distribution of purchases by year shows number of purchases increases with time. It's probably because online
purchasing was not really popular back in 2000's and this Amazon became more popular with time.

The categorical feature 'verified' indicates that verified purchases have lower product rank on average. 
The following following features have statistically significant difference with target variable 'rating'
('userid', 'asin'(product id), 'cat1'(product category), 'brand'). When I encoded 'rating' as categorical
feature I found out 'price' doesn't have statistically significant difference with target variable.

I created several new features that improved model's prediction. I groupedby category and number of stars
the rank mean. Another new feature is groupedby brand the mean number of stars. The average rating for each 
product is another new feature and the last feature is the average rating for each customer.

One of the key problems is to resolve the problem of cold start. It's difficult to offer something for a new client.
This client never purchased, rated anything. The collaborative recommendation system based only on ratings, product id,
and customer is not the option. The recommendation system to resolve this issue should be feature based or hybrid. You
can collect some basic features from your new customers or you can ask them to answer few questions after registration.

These days may recommendation systems are hybrid. The final recommendation system is Weighted Recommendation System for
this project. I built 3 recommendation systems and combined them to get final result. They have different weight in final
prediction. I used lightfm library to build two of the systems (without features and with features). The third recommendation
system is based on lightgbm regression.
